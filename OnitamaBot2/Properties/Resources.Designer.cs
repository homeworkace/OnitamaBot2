//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OnitamaBot2.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("OnitamaBot2.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #include &lt;iostream&gt;
        ///#include &lt;string&gt;
        ///#include &lt;vector&gt;
        ///#include &lt;cmath&gt;
        ///#include &lt;thread&gt;
        ///#include &lt;mutex&gt;
        /////#include &lt;Windows.h&gt;
        ///#include &lt;queue&gt;
        ///
        ///struct Card
        ///{
        ///	Card(short id);
        ///	std::vector&lt;short&gt; moveList;
        ///};
        ///
        ///Card::Card(short id)
        ///{
        ///	switch (id)
        ///	{
        ///		case 0:
        ///			moveList.push_back(-1);
        ///			moveList.push_back(1);
        ///			moveList.push_back(5);
        ///			break;
        ///		case 1:
        ///			moveList.push_back(-4);
        ///			moveList.push_back(-1);
        ///			moveList.push_back(6);
        ///			break;
        ///		case 2:
        ///			moveList.push_bac [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GameInfoh {
            get {
                return ResourceManager.GetString("GameInfoh", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #include &quot;./GameInfo.h&quot;
        ///#include &quot;./OnitamaBot/Round.h&quot;
        ///
        ///using namespace std;
        ///
        ///void newGame()
        ///{
        ///	int choice;
        ///	cout &lt;&lt; &quot;X starts first.\nPlace the corresponding numbers of the 5 cards in play, side by side, in this order: X&apos;s first card, X&apos;s second card, turn card, O&apos;s first card, O&apos;s second card.\nReference:\n00: Boar\n01: Cobra\n02: Crab\n03: Crane\n04: Dragon\n05: Eel\n06: Elephant\n07: Frog\n08: Goose\n09: Horse\n10: Mantis\n11: Monkey\n12: Ox\n13: Rabbit\n14: Rooster\n15: Tiger\nExample: X starts with B [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string maincpp {
            get {
                return ResourceManager.GetString("maincpp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #pragma once
        ///#include &lt;vector&gt;
        ///
        ///class Round
        ///{
        ///	gameState* curState;
        ///	int choice;
        ///
        ///public:
        ///	Round(bool XisPlayer, bool OisPlayer, int cards)
        ///	{
        ///		gameState* pos = new gameState();
        ///		pos-&gt;Oturn = false;
        ///		pos-&gt;parent = nullptr;
        ///		pos-&gt;position[0] = 0;
        ///		pos-&gt;position[1] = 1;
        ///		pos-&gt;position[2] = 2;
        ///		pos-&gt;position[3] = 3;
        ///		pos-&gt;position[4] = 4;
        ///		pos-&gt;position[5] = 20;
        ///		pos-&gt;position[6] = 21;
        ///		pos-&gt;position[7] = 22;
        ///		pos-&gt;position[8] = 23;
        ///		pos-&gt;position[9] = 24;
        ///		if (cards == 0) [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Roundh {
            get {
                return ResourceManager.GetString("Roundh", resourceCulture);
            }
        }
    }
}
